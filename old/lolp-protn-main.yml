# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Build at 00:00 on every 12th day-of-month.
  schedule:
    - cron: "0 0 */12 * *"
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    paths-ignore: [ '**/README.md' ]
  pull_request:
    branches: [ master ]
    paths-ignore: [ '**/README.md' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-staging-lolp"
  build-staging-lolp:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Prerequisites
        run: |
          wget -q "https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.0.3/appimage-builder-1.0.3-x86_64.AppImage" -O appimage-builder ; chmod +x appimage-builder ; sudo mv appimage-builder /usr/bin
          mkdir -p /usr/share/icons/hicolor/scalable/ ; cp wine.svg /usr/share/icons/hicolor/scalable/
          staging
          echo "WINE_VER=staging_lolp_5.18" >> $GITHUB_ENV
          Nvidia
          echo "NVDV=$(wget "https://launchpad.net/~graphics-drivers/+archive/ubuntu/ppa/+packages?field.name_filter=&field.status_filter=published&field.series_filter=kinetic" -qO- | grep -Eo drivers-.*changes | sed -r "s|_| |g;s|-| |g" | tail -n1 | awk '{print $9}')" >> $GITHUB_ENV

      # Runs a set of commands using the runners shell
      - name: Build appimage
        run: |
          # add dir dist
          mkdir dist

          set Nvidia driver version
          sed -i "s|520|$NVDV|" wine-staging-lolp.yml

          appimage-builder --recipe wine-staging-lolp.yml
          mv *AppImage* dist/.

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: wine-staging_lolp-continuous-x86_64.AppImage
          path: 'dist'

  # This workflow contains a single job called "build-staging-ge-proton"
  build-staging-ge-proton:
    The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Prerequisites
        run: |
          wget -q "https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.0.3/appimage-builder-1.0.3-x86_64.AppImage" -O appimage-builder ; chmod +x appimage-builder ; sudo mv appimage-builder /usr/bin
          mkdir -p /usr/share/icons/hicolor/scalable/ ; cp wine.svg /usr/share/icons/hicolor/scalable/
          # staging
          echo "WINE_VER=staging_ge-proton_$(wget -qO- "https://github.com/GloriousEggroll/wine-ge-custom/tags" | grep -Eo "GE-.*" | head -1 | sed -r 's|-GE||g;s|"| |g;s|n| |g' | awk '{print $2}')" >> $GITHUB_ENV
          # Nvidia
          echo "NVDV=$(wget "https://launchpad.net/~graphics-drivers/+archive/ubuntu/ppa/+packages?field.name_filter=&field.status_filter=published&field.series_filter=kinetic" -qO- | grep -Eo drivers-.*changes | sed -r "s|_| |g;s|-| |g" | tail -n1 | awk '{print $9}')" >> $GITHUB_ENV

      # Runs a set of commands using the runners shell
      - name: Build appimage
        run: |
          # add dir dist
          mkdir dist

          # set Nvidia driver version
          sed -i "s|520|$NVDV|" wine-staging-ge-proton.yml

          appimage-builder --recipe wine-staging-ge-proton.yml
          mv *AppImage* dist/.

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: wine-staging_ge-proton-continuous-x86_64.AppImage
          path: 'dist'

  release-staging-lolp:
      needs: [build-staging-lolp]
      runs-on: ubuntu-latest

      steps:
        - uses: actions/download-artifact@v1
          with:
            name: wine-staging_lolp-continuous-x86_64.AppImage

        - name: release
          uses: marvinpinto/action-automatic-releases@latest
          with:
            title: Continuous build (staging) lolp
            automatic_release_tag: continuous-staging_lolp
            prerelease: false
            draft: false
            files: |
              wine-staging_lolp-continuous-x86_64.AppImage
            repo_token: ${{ secrets.GITHUB_TOKEN }}

  release-staging-ge-proton:
      needs: [build-staging-ge-proton]
      runs-on: ubuntu-latest

      steps:
        - uses: actions/download-artifact@v1
          with:
            name: wine-staging_ge-proton-continuous-x86_64.AppImage

        - name: release
          uses: marvinpinto/action-automatic-releases@latest
          with:
            title: Continuous build (staging) GE Proton
            automatic_release_tag: continuous-staging_ge_proton
            prerelease: false
            draft: false
            files: |
              wine-staging_ge-proton-continuous-x86_64.AppImage
            repo_token: ${{ secrets.GITHUB_TOKEN }}
